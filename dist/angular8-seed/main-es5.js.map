{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/services/profile/profile.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div>\\r\\n    <h1> {{ title }} </h1>\\r\\n    <div>\\r\\n        <p> Username: ... </p>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label> First Name: </label>\\r\\n        <input type=\\\"text\\\" />\\r\\n        <input type=\\\"button\\\" value=\\\"Save\\\" />\\r\\n    </div>\\r\\n    <p> Loading profile... </p>\\r\\n    <p> Saving profile... </p>\\r\\n    <p> Error! </p>\\r\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IProfile, ProfileService } from './services/profile/profile.service';\r\n@Component({\r\n  selector: 'app',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public title = 'Profile'; public user: IProfile;\r\n  constructor(private profile: ProfileService) { } ngOnInit() { }\r\n  saveProfile() { }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nexport interface IProfile {\n  firstName: string; \n  lastName: string; \n  username: string;\n  age: number;\n} \n\n@Injectable({ providedIn: 'root' }) export class ProfileService {\n  public user: IProfile; constructor() { }\n\n  getProfileUser(): Promise<IProfile> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.round(Math.random())) {\n          this.user = {\n            firstName: 'Michael', \n            lastName: 'Collins', \n            username: 'michael.collins',\n            age: 30\n          }; \n          resolve(this.user);\n        } else {\n          reject({ error: 'Profile not found' });\n        }\n      }, Math.random() * 5000);\n    });\n  }\n\n  setName(firstName: string) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.round(Math.random())) {\n          this.user.firstName = firstName;\n          resolve(this.user);\n        } else {\n          reject({ error: 'Invalid name' });\n        }\n      }, Math.random() * 5000);\n    });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}